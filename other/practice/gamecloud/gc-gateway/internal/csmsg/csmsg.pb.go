// Code generated by protoc-gen-go.
// source: csmsg.proto
// DO NOT EDIT!

/*
Package csmsg is a generated protocol buffer package.

It is generated from these files:
	csmsg.proto

It has these top-level messages:
	Connect
	Connack
	Disconnect
	Heartbeat
	Transport
*/
package csmsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_Success ErrorCode = 0
)

var ErrorCode_name = map[int32]string{
	0: "Success",
}
var ErrorCode_value = map[string]int32{
	"Success": 0,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 连接
type Connect struct {
	Signature  string `protobuf:"bytes,1,opt,name=Signature" json:"Signature,omitempty"`
	Identifier string `protobuf:"bytes,2,opt,name=Identifier" json:"Identifier,omitempty"`
	Nonce      string `protobuf:"bytes,3,opt,name=Nonce" json:"Nonce,omitempty"`
	TokenTS    uint64 `protobuf:"fixed64,4,opt,name=TokenTS" json:"TokenTS,omitempty"`
	Timestamp  uint64 `protobuf:"fixed64,5,opt,name=Timestamp" json:"Timestamp,omitempty"`
	Timeout    int64  `protobuf:"varint,6,opt,name=Timeout" json:"Timeout,omitempty"`
}

func (m *Connect) Reset()                    { *m = Connect{} }
func (m *Connect) String() string            { return proto.CompactTextString(m) }
func (*Connect) ProtoMessage()               {}
func (*Connect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Connect) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *Connect) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Connect) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *Connect) GetTokenTS() uint64 {
	if m != nil {
		return m.TokenTS
	}
	return 0
}

func (m *Connect) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Connect) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

// 连接响应
type Connack struct {
	Code ErrorCode `protobuf:"varint,1,opt,name=Code,enum=csmsg.ErrorCode" json:"Code,omitempty"`
}

func (m *Connack) Reset()                    { *m = Connack{} }
func (m *Connack) String() string            { return proto.CompactTextString(m) }
func (*Connack) ProtoMessage()               {}
func (*Connack) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Connack) GetCode() ErrorCode {
	if m != nil {
		return m.Code
	}
	return ErrorCode_Success
}

// 断开连接
type Disconnect struct {
}

func (m *Disconnect) Reset()                    { *m = Disconnect{} }
func (m *Disconnect) String() string            { return proto.CompactTextString(m) }
func (*Disconnect) ProtoMessage()               {}
func (*Disconnect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// 心跳
type Heartbeat struct {
}

func (m *Heartbeat) Reset()                    { *m = Heartbeat{} }
func (m *Heartbeat) String() string            { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()               {}
func (*Heartbeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// 传输
type Transport struct {
	Payload []byte `protobuf:"bytes,1,opt,name=Payload,proto3" json:"Payload,omitempty"`
}

func (m *Transport) Reset()                    { *m = Transport{} }
func (m *Transport) String() string            { return proto.CompactTextString(m) }
func (*Transport) ProtoMessage()               {}
func (*Transport) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Transport) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*Connect)(nil), "csmsg.Connect")
	proto.RegisterType((*Connack)(nil), "csmsg.Connack")
	proto.RegisterType((*Disconnect)(nil), "csmsg.Disconnect")
	proto.RegisterType((*Heartbeat)(nil), "csmsg.Heartbeat")
	proto.RegisterType((*Transport)(nil), "csmsg.Transport")
	proto.RegisterEnum("csmsg.ErrorCode", ErrorCode_name, ErrorCode_value)
}

func init() { proto.RegisterFile("csmsg.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xad, 0xbb, 0x6d, 0xe9, 0x74, 0x91, 0x25, 0x78, 0xc8, 0x41, 0x44, 0x8a, 0x82, 0x78,
	0x58, 0x41, 0x1f, 0x61, 0x15, 0xf4, 0x22, 0x92, 0xf6, 0x05, 0xb2, 0xe9, 0xb8, 0x84, 0xb5, 0x99,
	0x92, 0xa4, 0x07, 0x9f, 0xca, 0x57, 0xb4, 0x4d, 0xa8, 0xbb, 0xc7, 0xef, 0xff, 0xc8, 0xcc, 0x3f,
	0x81, 0x52, 0xb9, 0xce, 0xed, 0x37, 0xbd, 0x25, 0x4f, 0x2c, 0x0d, 0x50, 0xfd, 0x26, 0x90, 0x6f,
	0xc9, 0x18, 0x54, 0x9e, 0x5d, 0x41, 0x51, 0xeb, 0xbd, 0x91, 0x7e, 0xb0, 0xc8, 0x93, 0x9b, 0xe4,
	0xbe, 0x10, 0xc7, 0x80, 0x5d, 0x03, 0xbc, 0xb7, 0x68, 0xbc, 0xfe, 0xd2, 0x68, 0xf9, 0x79, 0xd0,
	0x27, 0x09, 0xbb, 0x84, 0xf4, 0x83, 0x8c, 0x42, 0xbe, 0x08, 0x2a, 0x02, 0xe3, 0x90, 0x37, 0x74,
	0x40, 0xd3, 0xd4, 0x7c, 0x39, 0xe6, 0x99, 0x98, 0x71, 0xda, 0xd6, 0xe8, 0x0e, 0x9d, 0x97, 0x5d,
	0xcf, 0xd3, 0xe0, 0x8e, 0x41, 0x78, 0x37, 0x02, 0x0d, 0x9e, 0x67, 0xa3, 0x5b, 0x88, 0x19, 0xab,
	0xc7, 0x58, 0x58, 0xaa, 0x03, 0xbb, 0x85, 0xe5, 0x96, 0xda, 0xd8, 0xf5, 0xe2, 0x69, 0xbd, 0x89,
	0xf7, 0xbd, 0x5a, 0x4b, 0x76, 0xca, 0x45, 0xb0, 0xd5, 0x0a, 0xe0, 0x45, 0x3b, 0x15, 0x8f, 0xac,
	0x4a, 0x28, 0xde, 0x50, 0x5a, 0xbf, 0x43, 0xe9, 0xab, 0xbb, 0xb1, 0x83, 0x95, 0xc6, 0xf5, 0x64,
	0xfd, 0xb4, 0xf2, 0x53, 0xfe, 0x7c, 0x93, 0x6c, 0xc3, 0xc0, 0x95, 0x98, 0xf1, 0x81, 0x43, 0xf1,
	0x3f, 0x94, 0x95, 0x90, 0xd7, 0x83, 0x52, 0xe8, 0xdc, 0xfa, 0x6c, 0x97, 0x85, 0xcf, 0x7c, 0xfe,
	0x0b, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xb7, 0x78, 0x04, 0x5b, 0x01, 0x00, 0x00,
}
